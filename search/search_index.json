{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Selamat Datang Di Halaman Tugas Penambangan Data \u00b6 Nama : Rusnia Dyah Wardani NIM : 180411100018 Kelas : Penambangan Data 5D Jurusan : Teknik Informatika Alamat : Perum. Telang Indah Gg Masjid \u00b6 \u200b","title":"Index"},{"location":"#selamat-datang-di-halaman-tugas-penambangan-data","text":"Nama : Rusnia Dyah Wardani NIM : 180411100018 Kelas : Penambangan Data 5D Jurusan : Teknik Informatika Alamat : Perum. Telang Indah Gg Masjid","title":"Selamat Datang Di Halaman Tugas Penambangan Data"},{"location":"jarak/","text":"Menghitung Jarak Data \u00b6 Jarak Minkowski \u00b6 Jarak Minkowski adalah metrik dalam ruang vektor numerik yang dapat dianggap sebagai generalisasi dari jarak Euclidean dan jarak Manhattan. Jarak Minkowski dapat digambarkan dengan : $$ d _ { \\operatorname { min } } = ( \\ sum _ { i = 1 } ^ { n } | x _ { i } - y _ { i } | ^ { m } ) ^ { \\frac { 1 } { m } } , m \\geq 1 $$ Keterangan : m = bilangan riel positif xi dan yi = dua vektor dalam n Jarak Manhattan \u00b6 Jarak Manhattan adalah jarak antara dua titik diukur sepanjang sumbu di sudut kanan. Pada jarak manhattan sama seperti jarak minkowski, yaitu jarak manhattan sensitif terhadap outlier dengan m = 1. Jarak manhattan digambarkan dengan : $$ d _ { \\operatorname { man } } = \\sum _ { i = 1 } ^ { n } \\left| x _ { i } - y _ { i } \\right| $$ Jarak Euclidean \u00b6 Jarak Euclidean antara dua titik di bidang atau ruang 3 dimensi mengukur panjang segmen yang menghubungkan dua titik. Teorema Pythagoras dapat digunakan untuk menghitung jarak antara dua titik, seperti pada rumus yang berikut ini : $$ \\sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2} $$ Jarak Average \u00b6 Jarak Average adalah jarak yang menggunakan rata-rata dari jarak euclidean untuk memperbaiki hasil. Untuk dua titik yaitu x dan y dalam dimensi n. Jarak Average dapat digambarkan pada rumus : $$ d _ { a v e } = \\left ( \\frac { 1 } { n } \\sum _ { i = 1 } ^ { n } ( x _ { i } - y _ { i } ) ^ { 2 } \\right) ^ { \\frac { 1 } { 2 } } $$ Jarak Weighted Euclidean \u00b6 Jarak Weighted Euclidean adalah pengukuran jarak dengan menggunakan modifikasi dari jarak Euclidean. Perhitungannya berdasarkan tingkatan penting dari masing-masing atribut yang ditentukan. $$ d _ { w e } = \\left ( \\sum _ { i = 1 } ^ { n } w _ { i } ( x _ { i } - y _ { i } \\right) ^ { 2 } ) ^ { \\frac { 1 } { 2 } } $$ Keterangan : wi = bobot pada atribut ke i Jarak Chord \u00b6 Jarak Chord adalah cara perhitungan melalui modifikasi jarak Euclidean untuk mengatasi kekurangan dari jarak tersebut. Data yang tidak dinormalisasi juga dapat digunakan untuk Jarak Chord. Jarak Chord dapat dirumuskan sebagai berikut : $$ d _ { \\text {chord} } = \\left ( 2 - 2 \\frac { \\sum _ { i = 1 } ^ { n } x _ { i } y _ { i } } { | x | _ { 2 } | y | _ { 2 } } \\right) ^ { \\frac { 1 } { 2 } } $$ Jarak Mahalanobis \u00b6 ekstraksi hyperellipsoidal clusters didapat dari Jarak Mahalanobis yang teratur. Distorsi yang disebabkan oleh korelasi linear antara fitur dapat diatasi dengan jarak Mahalanobis. Rumus jarak Mahalanobis dapat digambarkan dengan : $$ d _ { m a h } = \\sqrt { ( x - y ) S ^ { - 1 } ( x - y ) ^ { T } } $$ Keterangan : S = matrik covariance data","title":"Menghitung Jarak Data"},{"location":"jarak/#menghitung-jarak-data","text":"","title":"Menghitung Jarak Data"},{"location":"jarak/#jarak-minkowski","text":"Jarak Minkowski adalah metrik dalam ruang vektor numerik yang dapat dianggap sebagai generalisasi dari jarak Euclidean dan jarak Manhattan. Jarak Minkowski dapat digambarkan dengan : $$ d _ { \\operatorname { min } } = ( \\ sum _ { i = 1 } ^ { n } | x _ { i } - y _ { i } | ^ { m } ) ^ { \\frac { 1 } { m } } , m \\geq 1 $$ Keterangan : m = bilangan riel positif xi dan yi = dua vektor dalam n","title":"Jarak Minkowski"},{"location":"jarak/#jarak-manhattan","text":"Jarak Manhattan adalah jarak antara dua titik diukur sepanjang sumbu di sudut kanan. Pada jarak manhattan sama seperti jarak minkowski, yaitu jarak manhattan sensitif terhadap outlier dengan m = 1. Jarak manhattan digambarkan dengan : $$ d _ { \\operatorname { man } } = \\sum _ { i = 1 } ^ { n } \\left| x _ { i } - y _ { i } \\right| $$","title":"Jarak Manhattan"},{"location":"jarak/#jarak-euclidean","text":"Jarak Euclidean antara dua titik di bidang atau ruang 3 dimensi mengukur panjang segmen yang menghubungkan dua titik. Teorema Pythagoras dapat digunakan untuk menghitung jarak antara dua titik, seperti pada rumus yang berikut ini : $$ \\sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2} $$","title":"Jarak Euclidean"},{"location":"jarak/#jarak-average","text":"Jarak Average adalah jarak yang menggunakan rata-rata dari jarak euclidean untuk memperbaiki hasil. Untuk dua titik yaitu x dan y dalam dimensi n. Jarak Average dapat digambarkan pada rumus : $$ d _ { a v e } = \\left ( \\frac { 1 } { n } \\sum _ { i = 1 } ^ { n } ( x _ { i } - y _ { i } ) ^ { 2 } \\right) ^ { \\frac { 1 } { 2 } } $$","title":"Jarak Average"},{"location":"jarak/#jarak-weighted-euclidean","text":"Jarak Weighted Euclidean adalah pengukuran jarak dengan menggunakan modifikasi dari jarak Euclidean. Perhitungannya berdasarkan tingkatan penting dari masing-masing atribut yang ditentukan. $$ d _ { w e } = \\left ( \\sum _ { i = 1 } ^ { n } w _ { i } ( x _ { i } - y _ { i } \\right) ^ { 2 } ) ^ { \\frac { 1 } { 2 } } $$ Keterangan : wi = bobot pada atribut ke i","title":"Jarak Weighted Euclidean"},{"location":"jarak/#jarak-chord","text":"Jarak Chord adalah cara perhitungan melalui modifikasi jarak Euclidean untuk mengatasi kekurangan dari jarak tersebut. Data yang tidak dinormalisasi juga dapat digunakan untuk Jarak Chord. Jarak Chord dapat dirumuskan sebagai berikut : $$ d _ { \\text {chord} } = \\left ( 2 - 2 \\frac { \\sum _ { i = 1 } ^ { n } x _ { i } y _ { i } } { | x | _ { 2 } | y | _ { 2 } } \\right) ^ { \\frac { 1 } { 2 } } $$","title":"Jarak Chord"},{"location":"jarak/#jarak-mahalanobis","text":"ekstraksi hyperellipsoidal clusters didapat dari Jarak Mahalanobis yang teratur. Distorsi yang disebabkan oleh korelasi linear antara fitur dapat diatasi dengan jarak Mahalanobis. Rumus jarak Mahalanobis dapat digambarkan dengan : $$ d _ { m a h } = \\sqrt { ( x - y ) S ^ { - 1 } ( x - y ) ^ { T } } $$ Keterangan : S = matrik covariance data","title":"Jarak Mahalanobis"},{"location":"missing value/","text":"Memperlakukan Missing Value Dengan Metode Algoritma K-Nearest Neighbor (KNN) \u00b6 Missing Value \u00b6 Missing value adalah data yang hilang. Dalam arti bahwa, missing value merupakan kekosongan data atau informasi pada suatu objek. Missing value dapat terjadi akibat beberapa faktor. Diantaranya, dapat terjadi karena informasi untuk suatu objek tidak diberikan, tidak ditemukan, atau bahkan tidak dicantumkan. Untuk mencari missing value atau data yang hilang tersebut, kita dapat menggunakan metode Algoritma K-Nearest Neighbor (KKN). K-Nearest Neighbor (KNN) \u00b6 Salah satu usaha untuk memperlakukan missing data yaitu dengan menggunakan Algoritma K-Nearest Neighbor (KNN). Lalu apa yang dimaksud dengan KNN? KNN adalah sebuah metode sederhana untuk mencari missing data dengan menentukan nilai k, dimana nilai k merupakan jarak tetangga terdekat antar data sebagai nilai estimator. Algroritma pada K-Nearest Neighbor (KNN) \u00b6 Langkah utama dalam metode KNN yaitu dengan menghitung nilai k. Nilai k yang dimaksud yaitu jarak tetangga terdekat antar dataset. Kemudian, hasil perhitungan nilai k tersebut menjadi nilai estimator yang digunakan untuk mengisi pada data yang hilang tersebut. Perhitungan untuk mencari nilai k yaitu tergantung dengan jenis data. Apabila data yang disajikan berupa data kontinu, maka menggunakan rata-rata dari tetangga terdekat. Dan apabila data yang disajikan berupa data kualitatif, maka diambil dari nilai yang sering keluar pada objek. Dapat dimisalkan bahwa D merupakan suatu objek yang memiliki kasus missing data. Dengan Dc merupakan subdata yang lengkap, sedangkan Dm merupakan sub data yang memiliki kerumpangan (mengandung atribut yang hilang). Maka, algoritma nya sebagai berikut : Tentukan nilai k Tentukan jarak Masukkan data yang hilang dengan rata-rata (k) dengan tetangga terdekat di Dc Script Missing Value \u00b6 # importing pandas as pd import pandas as pd # importing numpy as np import numpy as np # dictionary of lists dict = { 'First Score' :[ 95 , 70 , np . nan , 90 ], 'Second Score' : [ 75 , 70 , 91 , np . nan ], 'Third Score' :[ np . nan , 75 , 85 , 90 ]} # creating a dataframe from dictionary df = pd . DataFrame ( dict ) # filling missing value using fillna() df . fillna ( 0 ) First Score Second Score Third Score 0 95.0 75.0 0.0 1 70.0 70.0 75.0 2 0.0 91.0 85.0 3 90.0 0.0 90.0 \u00b6 \u200b","title":"Missing value"},{"location":"missing value/#memperlakukan-missing-value-dengan-metode-algoritma-k-nearest-neighbor-knn","text":"","title":"Memperlakukan Missing Value Dengan Metode  Algoritma K-Nearest Neighbor (KNN)"},{"location":"missing value/#missing-value","text":"Missing value adalah data yang hilang. Dalam arti bahwa, missing value merupakan kekosongan data atau informasi pada suatu objek. Missing value dapat terjadi akibat beberapa faktor. Diantaranya, dapat terjadi karena informasi untuk suatu objek tidak diberikan, tidak ditemukan, atau bahkan tidak dicantumkan. Untuk mencari missing value atau data yang hilang tersebut, kita dapat menggunakan metode Algoritma K-Nearest Neighbor (KKN).","title":"Missing Value"},{"location":"missing value/#k-nearest-neighbor-knn","text":"Salah satu usaha untuk memperlakukan missing data yaitu dengan menggunakan Algoritma K-Nearest Neighbor (KNN). Lalu apa yang dimaksud dengan KNN? KNN adalah sebuah metode sederhana untuk mencari missing data dengan menentukan nilai k, dimana nilai k merupakan jarak tetangga terdekat antar data sebagai nilai estimator.","title":"K-Nearest Neighbor (KNN)"},{"location":"missing value/#algroritma-pada-k-nearest-neighbor-knn","text":"Langkah utama dalam metode KNN yaitu dengan menghitung nilai k. Nilai k yang dimaksud yaitu jarak tetangga terdekat antar dataset. Kemudian, hasil perhitungan nilai k tersebut menjadi nilai estimator yang digunakan untuk mengisi pada data yang hilang tersebut. Perhitungan untuk mencari nilai k yaitu tergantung dengan jenis data. Apabila data yang disajikan berupa data kontinu, maka menggunakan rata-rata dari tetangga terdekat. Dan apabila data yang disajikan berupa data kualitatif, maka diambil dari nilai yang sering keluar pada objek. Dapat dimisalkan bahwa D merupakan suatu objek yang memiliki kasus missing data. Dengan Dc merupakan subdata yang lengkap, sedangkan Dm merupakan sub data yang memiliki kerumpangan (mengandung atribut yang hilang). Maka, algoritma nya sebagai berikut : Tentukan nilai k Tentukan jarak Masukkan data yang hilang dengan rata-rata (k) dengan tetangga terdekat di Dc","title":"Algroritma pada K-Nearest Neighbor (KNN)"},{"location":"missing value/#script-missing-value","text":"# importing pandas as pd import pandas as pd # importing numpy as np import numpy as np # dictionary of lists dict = { 'First Score' :[ 95 , 70 , np . nan , 90 ], 'Second Score' : [ 75 , 70 , 91 , np . nan ], 'Third Score' :[ np . nan , 75 , 85 , 90 ]} # creating a dataframe from dictionary df = pd . DataFrame ( dict ) # filling missing value using fillna() df . fillna ( 0 ) First Score Second Score Third Score 0 95.0 75.0 0.0 1 70.0 70.0 75.0 2 0.0 91.0 85.0 3 90.0 0.0 90.0","title":"Script Missing Value"},{"location":"statistik deskriptif/","text":"Statistik Deskriptif \u00b6 Pengertian \u00b6 Statistika Deskriptif merupakan metode yang berkaitan dengan pengumpulan dan penyajian data sehingga memberikan informasi. Statististika deskriptif hanya memberikan informasi yang disediakan dan tidak menarik kesimpulan apapun tentang yang lainnya. Tipe Statistik Deskriptif \u00b6 Mean ( Rata-Rata ) \u00b6 Mean merupakan rata-rata dari beberapa data yang tersedia. Mean dalam data juga merupakan statistik karena bisa menampilkan kisaran dari beberapa data yang ditentukan. Berikut adalah rumusnya : $$ \\bar x ={\\sum \\limits_{i=1}^{n} x_i \\over N} = {x_1 + x_2 + x_3 + ... + x_n \\over N} $$ Keterangan : x = data ke n x bar = x rata-rata = nilai rata-rata sampel n = banyaknya data Median ( Nilai Tengah ) \u00b6 Median merupakan nilai tengah yang ada pada data-data yang telah ditentukan. Median memiliki dua jenis rumus dalam perhitungannya, yaitu untuk data yanng berjumlah ganjil dan data yang berjumlah genap. Berikut adalah rumus nya : $$ Me=Q_2 =\\left( \\begin{matrix} n+1 \\over 2 \\end{matrix} \\right), jika\\quad n\\quad ganjil $$ $$ Me=Q_2 =\\left( \\begin{matrix} {xn \\over 2 } {xn+1\\over 2} \\over 2 \\end{matrix} \\right), jika\\quad n\\quad genap $$ Keterangan : Me = Median dari data n = Banyak data Modus (Nilai Sering Keluar) \u00b6 Modus adalah nilai yang sering keluar dalam kumpulan data - data yang telah tersedia. $$ M_o = Tb + p{b_1 \\over b_1 + b_2} $$ Keterangan : Mo = Modus dari kelompok data b1 = selisih frekuensi antar elemen modus dengan elemen sebelumnya b2 = selisih frekuensi antara elemen modus dengan elemen sesudahnya Tb = tepi bawah dari elemen modus b1 p = panjang interval Varians \u00b6 Varians adalah parameter yang menjelaskan tentang distribusi probabilitas. Varian berguna mengukur seberapa jauh sebuah kumpulan bilangan tersebar. Berikut cara menghitungnya : $$ \\sigma^ = \\sqrt {{\\sum \\limits_{i=1}^{n} (x_i - \\bar x)^2 \\over n}} $$ Skewnes \u00b6 Skewnes merupakan kemiringan dalam suatu kurva. Skewnes adalah derajat ketidak simetrisan suatu distribusi. Berikut cara menghitungnya : $$ Skewness = {\\sum \\limits{i=1}^n (x_i - \\bar x)^i \\over (n- 1) \\sigma^3} $$ xi = titik data x bar = rata-rata dari distribusi n = jumlah titik dalam distribusi o = standar deviasi Quartile \u00b6 Quartile merupakan nilai - nilai yang membagi data dalam 4 bagian yang sama. terdapat tiga jenis quartile, yaitu quartile pertama, kedua, dan ketiga. Adapun cara mencari atau menghitungnya yaitu : $$ Q_1 = (n + 1) {1\\over 4} $$ $$ Q_2 = (n + 1) {1\\over 2} $$ $$ Q_3 = (n + 1) {3\\over 4} $$ Keterangan : Q = Nilai dari quartile n = banyak dari himpunan data Penerapan Statistik Deskriptif Menggunakan Python \u00b6 Alat dan Bahan \u00b6 Pada kasus ini, terdapat file .csv yang berisi 500 data random yang dibuat dari Ms. Excel terlebih dahulu. Untuk selanjutnya, dibutuhkan library python. Library python yang dibutuhkan antara lain Pandas dan Scipy. Penerapan \u00b6 import pandas as pd from scipy import stats df = pd . read_csv ( \"sekolah.csv\" , sep = ';' ) data = { \"Stats\" :[ 'Min' , 'Max' , 'Mean' , 'Standard Deviasi' , 'Variasi' , 'Skewnes' , 'Quantile 1' , 'Quantile 2' , 'Quantile 3' , 'Median' , 'Modus' ]} for i in df . columns : data [ i ] = [ df [ i ] . min (), df [ i ] . max (), df [ i ] . mean (), round ( df [ i ] . std (), 2 ), round ( df [ i ] . var (), 2 ), round ( df [ i ] . skew (), 2 ), df [ i ] . quantile ( 0.25 ), df [ i ] . quantile ( 0.5 ), df [ i ] . quantile ( 0.75 ), df [ i ] . median (), stats . mode ( df [ i ]) . mode [ 0 ]] tes = pd . DataFrame ( data , columns = [ 'Stats' ] + [ x for x in df . columns ]) tes Hasil Running \u00b6 Stats MATEMATIKA BAHASA INDONESIA BAHASA INGGRIS IPA 0 Min 60.000000 65.000000 55.000000 60.000000 1 Max 100.000000 100.000000 100.000000 100.000000 2 Mean 80.308617 81.927856 77.859719 79.230461 3 Standard Deviasi 11.920000 10.340000 12.810000 11.730000 4 Variasi 142.110000 106.860000 164.030000 137.610000 5 Skewnes -0.050000 0.100000 0.010000 0.050000 6 Quantile 1 71.000000 73.000000 67.000000 69.000000 7 Quantile 2 81.000000 81.000000 78.000000 79.000000 8 Quantile 3 90.000000 91.000000 88.000000 89.000000 9 Median 81.000000 81.000000 78.000000 79.000000 10 Modus 60.000000 78.000000 86.000000 61.000000 MathJax.Hub.Config({ tex2jax: {inlineMath:[['$$','$$']]} });","title":"Statistik deskriptif"},{"location":"statistik deskriptif/#statistik-deskriptif","text":"","title":"Statistik Deskriptif"},{"location":"statistik deskriptif/#pengertian","text":"Statistika Deskriptif merupakan metode yang berkaitan dengan pengumpulan dan penyajian data sehingga memberikan informasi. Statististika deskriptif hanya memberikan informasi yang disediakan dan tidak menarik kesimpulan apapun tentang yang lainnya.","title":"Pengertian"},{"location":"statistik deskriptif/#tipe-statistik-deskriptif","text":"","title":"Tipe Statistik Deskriptif"},{"location":"statistik deskriptif/#mean-rata-rata","text":"Mean merupakan rata-rata dari beberapa data yang tersedia. Mean dalam data juga merupakan statistik karena bisa menampilkan kisaran dari beberapa data yang ditentukan. Berikut adalah rumusnya : $$ \\bar x ={\\sum \\limits_{i=1}^{n} x_i \\over N} = {x_1 + x_2 + x_3 + ... + x_n \\over N} $$ Keterangan : x = data ke n x bar = x rata-rata = nilai rata-rata sampel n = banyaknya data","title":"Mean ( Rata-Rata )"},{"location":"statistik deskriptif/#median-nilai-tengah","text":"Median merupakan nilai tengah yang ada pada data-data yang telah ditentukan. Median memiliki dua jenis rumus dalam perhitungannya, yaitu untuk data yanng berjumlah ganjil dan data yang berjumlah genap. Berikut adalah rumus nya : $$ Me=Q_2 =\\left( \\begin{matrix} n+1 \\over 2 \\end{matrix} \\right), jika\\quad n\\quad ganjil $$ $$ Me=Q_2 =\\left( \\begin{matrix} {xn \\over 2 } {xn+1\\over 2} \\over 2 \\end{matrix} \\right), jika\\quad n\\quad genap $$ Keterangan : Me = Median dari data n = Banyak data","title":"Median ( Nilai Tengah )"},{"location":"statistik deskriptif/#modus-nilai-sering-keluar","text":"Modus adalah nilai yang sering keluar dalam kumpulan data - data yang telah tersedia. $$ M_o = Tb + p{b_1 \\over b_1 + b_2} $$ Keterangan : Mo = Modus dari kelompok data b1 = selisih frekuensi antar elemen modus dengan elemen sebelumnya b2 = selisih frekuensi antara elemen modus dengan elemen sesudahnya Tb = tepi bawah dari elemen modus b1 p = panjang interval","title":"Modus (Nilai Sering Keluar)"},{"location":"statistik deskriptif/#varians","text":"Varians adalah parameter yang menjelaskan tentang distribusi probabilitas. Varian berguna mengukur seberapa jauh sebuah kumpulan bilangan tersebar. Berikut cara menghitungnya : $$ \\sigma^ = \\sqrt {{\\sum \\limits_{i=1}^{n} (x_i - \\bar x)^2 \\over n}} $$","title":"Varians"},{"location":"statistik deskriptif/#skewnes","text":"Skewnes merupakan kemiringan dalam suatu kurva. Skewnes adalah derajat ketidak simetrisan suatu distribusi. Berikut cara menghitungnya : $$ Skewness = {\\sum \\limits{i=1}^n (x_i - \\bar x)^i \\over (n- 1) \\sigma^3} $$ xi = titik data x bar = rata-rata dari distribusi n = jumlah titik dalam distribusi o = standar deviasi","title":"Skewnes"},{"location":"statistik deskriptif/#quartile","text":"Quartile merupakan nilai - nilai yang membagi data dalam 4 bagian yang sama. terdapat tiga jenis quartile, yaitu quartile pertama, kedua, dan ketiga. Adapun cara mencari atau menghitungnya yaitu : $$ Q_1 = (n + 1) {1\\over 4} $$ $$ Q_2 = (n + 1) {1\\over 2} $$ $$ Q_3 = (n + 1) {3\\over 4} $$ Keterangan : Q = Nilai dari quartile n = banyak dari himpunan data","title":"Quartile"},{"location":"statistik deskriptif/#penerapan-statistik-deskriptif-menggunakan-python","text":"","title":"Penerapan Statistik Deskriptif Menggunakan Python"},{"location":"statistik deskriptif/#alat-dan-bahan","text":"Pada kasus ini, terdapat file .csv yang berisi 500 data random yang dibuat dari Ms. Excel terlebih dahulu. Untuk selanjutnya, dibutuhkan library python. Library python yang dibutuhkan antara lain Pandas dan Scipy.","title":"Alat dan Bahan"},{"location":"statistik deskriptif/#penerapan","text":"import pandas as pd from scipy import stats df = pd . read_csv ( \"sekolah.csv\" , sep = ';' ) data = { \"Stats\" :[ 'Min' , 'Max' , 'Mean' , 'Standard Deviasi' , 'Variasi' , 'Skewnes' , 'Quantile 1' , 'Quantile 2' , 'Quantile 3' , 'Median' , 'Modus' ]} for i in df . columns : data [ i ] = [ df [ i ] . min (), df [ i ] . max (), df [ i ] . mean (), round ( df [ i ] . std (), 2 ), round ( df [ i ] . var (), 2 ), round ( df [ i ] . skew (), 2 ), df [ i ] . quantile ( 0.25 ), df [ i ] . quantile ( 0.5 ), df [ i ] . quantile ( 0.75 ), df [ i ] . median (), stats . mode ( df [ i ]) . mode [ 0 ]] tes = pd . DataFrame ( data , columns = [ 'Stats' ] + [ x for x in df . columns ]) tes","title":"Penerapan"},{"location":"statistik deskriptif/#hasil-running","text":"Stats MATEMATIKA BAHASA INDONESIA BAHASA INGGRIS IPA 0 Min 60.000000 65.000000 55.000000 60.000000 1 Max 100.000000 100.000000 100.000000 100.000000 2 Mean 80.308617 81.927856 77.859719 79.230461 3 Standard Deviasi 11.920000 10.340000 12.810000 11.730000 4 Variasi 142.110000 106.860000 164.030000 137.610000 5 Skewnes -0.050000 0.100000 0.010000 0.050000 6 Quantile 1 71.000000 73.000000 67.000000 69.000000 7 Quantile 2 81.000000 81.000000 78.000000 79.000000 8 Quantile 3 90.000000 91.000000 88.000000 89.000000 9 Median 81.000000 81.000000 78.000000 79.000000 10 Modus 60.000000 78.000000 86.000000 61.000000 MathJax.Hub.Config({ tex2jax: {inlineMath:[['$$','$$']]} });","title":"Hasil Running"}]}